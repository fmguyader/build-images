---
- hosts: all 
  become: true 
  tasks:
  - name: Update the apt package index
    become: yes
    apt:
      name: "*"
      state: latest
      update_cache: yes
      force_apt_get: yes
    when: ansible_facts['os_user'] == "Debian"
  
  - name: Update the apt package index
    become: yes
    yum:
      name: "*"
      state: latest
      update_cache: yes
      force_apt_get: yes
    when: ansible_facts['os_user'] == "CentOS"

  - name: Install packages for apt add repository over HTTPS
    become: yes
    apt:
      name: "{{ packagesdep }}"
      force_apt_get: yes
      state: latest
      update_cache: yes
    vars:
      packagesdep:
      - git
      - apt-transport-https
      - ca-certificates
      - wget
      - software-properties-common
      - gnupg2
      - curl
    when: ansible_facts['os_user'] == "Debian"

  - name: Install packages for apt add repository over HTTPS
    become: yes
    yum:
      name: "{{ packagesdep }}"
      force_apt_get: yes
      state: latest
      update_cache: yes
    vars:
      packagesdep:
      - git
      - apt-transport-https
      - ca-certificates
      - wget
      - software-properties-common
      - gnupg2
      - curl
    when: ansible_facts['os_user'] == "CentOS"  

  - name: Add Apt signing key from official docker repo
    apt_key:
      url: https://download.docker.com/linux/debian/gpg
      state: present
    when: ansible_facts['os_user'] == "Debian"
    
  - name: Add Apt signing key from official docker repo
    apt_key:
      url: https://download.docker.com/linux/centos/gpg
      state: present
    when: ansible_facts['os_user'] == "CentOS"

  - name: add docker official repository for Debian Stretch
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
      state: present
    when: ansible_facts['os_user'] == "Debian"
    
  - name: add docker official repository for Debian Stretch
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/centos stretch stable
      state: present
    when: ansible_facts['os_user'] == "CentOS"

  - name: Index new repo into the cache
    become: yes
    apt:
      name: "*"
      state: latest
      update_cache: yes
      force_apt_get: yes
    when: ansible_facts['os_user'] == "Debian"

  - name: Index new repo into the cache
    become: yes
    yum:
      name: "*"
      state: latest
      update_cache: yes
      force_apt_get: yes
    when: ansible_facts['os_user'] == "CentOS"

  - name: actually install docker
    apt:
      name: "docker-ce"
      state: latest
    when: ansible_facts['os_user'] == "Debian"
 
  - name: actually install docker
    yum:
      name: "docker-ce"
      state: latest
    when: ansible_facts['os_user'] == "CentOS"

  - name: Run and enable docker
    service:
     name: docker
     state: started
     enabled: true
    


  - name: create build directory
    file:
      path: /tp2
      state: directory
      mode: '0755'

  - name: index copy
    copy: 
      src: docs/
      dest: /tp2
  
        

  - name: création image worker
    command: docker build -t image_worker /home/fm/tp2/worker
  
  - name: création image vote
    command: docker build -t image_vote /home/fm/tp2/vote

  - name: création image result
    command: docker build -t image_result /home/fm/tp2/result
    


  - name: suppression dossier images
    file: 
     state: absent
     path: /home/fm/tp2